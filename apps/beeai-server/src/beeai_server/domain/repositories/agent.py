from typing import Protocol, runtime_checkable, AsyncIterator
from uuid import UUID
from beeai_server.domain.models.agent import Agent, AgentRun


@runtime_checkable
class IAgentRepository(Protocol):
    async def bulk_create(self, agents: list[Agent]) -> None: ...
    async def get_agent(self, *, agent_id: UUID) -> Agent: ...
    async def list(self) -> AsyncIterator[Agent]:
        yield ...

    async def get_agent_by_name(self, *, name: str) -> Agent: ...
    async def create_run(self, *, run: AgentRun) -> None: ...
    async def delete_run(self, *, run_id: UUID) -> None: ...
    async def find_by_run_id(self, *, run_id: UUID) -> Agent: ...
